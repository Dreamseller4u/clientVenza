{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Documents/Webapps/react-crm/client/src/components/Login/LoginComponent.jsx\";\nimport React from 'react';\nimport style from './login.module.css';\nimport { connect } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport { authThunk } from '../../redux/usersReducer';\nimport { Redirect } from 'react-router-dom';\n\nclass LoginComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.login = values => {\n      this.props.authThunk(values.email, values.password);\n    };\n  }\n\n  render() {\n    if (this.props.isAuth) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/backend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.loginPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.loginBlock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(LoginForm, {\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    isAuth: state.usersPage.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authThunk\n})(LoginComponent);","map":{"version":3,"sources":["/Users/macbookair/Documents/Webapps/react-crm/client/src/components/Login/LoginComponent.jsx"],"names":["React","style","connect","LoginForm","authThunk","Redirect","LoginComponent","Component","login","values","props","email","password","render","isAuth","loginPage","loginBlock","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAEzCC,KAFyC,GAEhCC,MAAD,IAAY;AAChB,WAAKC,KAAL,CAAWN,SAAX,CAAqBK,MAAM,CAACE,KAA5B,EAAmCF,MAAM,CAACG,QAA1C;AACH,KAJwC;AAAA;;AAMzCC,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKH,KAAL,CAAWI,MAAd,EAAqB;AACjB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAEb,KAAK,CAACc,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEd,KAAK,CAACe,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH;;AAlBwC;;AAoB7C,IAAIS,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAM;AACFJ,IAAAA,MAAM,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AADtB,GAAN;AAGH,CAJD;;AAKA,eAAeZ,OAAO,CAACe,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAsCE,cAAtC,CAAf","sourcesContent":["import React from 'react';\nimport style from './login.module.css'\nimport { connect } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport {authThunk} from '../../redux/usersReducer'\nimport { Redirect } from 'react-router-dom';\n\nclass LoginComponent extends React.Component {\n\n    login = (values) => {\n        this.props.authThunk(values.email, values.password)\n    }\n    \n    render() {\n        if(this.props.isAuth){\n            return <Redirect to='/backend' />\n        }\n        return (\n            <div className={style.loginPage}>\n                <div className={style.loginBlock}>\n                    <h4>Login</h4>\n                    <LoginForm onSubmit={this.login}/>\n                </div>\n            </div>\n        );\n    }\n}\nlet mapStateToProps = (state) => {\n    return{\n        isAuth: state.usersPage.isAuth\n    }\n}\nexport default connect(mapStateToProps, {authThunk})(LoginComponent);\n"]},"metadata":{},"sourceType":"module"}