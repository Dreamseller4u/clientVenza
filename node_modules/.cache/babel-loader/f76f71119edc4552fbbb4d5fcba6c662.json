{"ast":null,"code":"import { addNewLocation, getLocation } from \"../api/locationAPI\";\nconst GET_LOCATION = 'GET_LOCATION';\nlet initsialStore = {\n  location: null\n};\n\nconst locationReducer = (state = initsialStore, action) => {\n  switch (action.type) {\n    case GET_LOCATION:\n      return { ...state,\n        location: [...action.location]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getLocationAC = location => {\n  return {\n    type: GET_LOCATION,\n    location\n  };\n};\n\nexport const getLocationThunk = () => {\n  return dispatch => {\n    getLocation().then(res => dispatch(getLocationAC(res.data)));\n  };\n};\nexport const addNewLocationThunk = data => {\n  return dispatch => {\n    addNewLocation(data).then(res => alert(res.data.message) && getLocation());\n  };\n};\nexport default locationReducer;","map":{"version":3,"sources":["/Users/macbookair/Documents/Webapps/react-crm/client/src/redux/locationReducer.js"],"names":["addNewLocation","getLocation","GET_LOCATION","initsialStore","location","locationReducer","state","action","type","getLocationAC","getLocationThunk","dispatch","then","res","data","addNewLocationThunk","alert","message"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,oBAA5C;AAEA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,QAAQ,EAAC;AADO,CAApB;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFF,QAAAA,QAAQ,EAAE,CAAC,GAAGG,MAAM,CAACH,QAAX;AAFR,OAAN;;AAKJ;AAAS,aAAOE,KAAP;AAPb;AASH,CAVD;;AAYA,MAAMG,aAAa,GAAIL,QAAD,IAAc;AAAC,SAAM;AAACI,IAAAA,IAAI,EAACN,YAAN;AAAmBE,IAAAA;AAAnB,GAAN;AAAmC,CAAxE;;AAEA,OAAO,MAAMM,gBAAgB,GAAG,MAAM;AAClC,SAAQC,QAAD,IAAa;AAChBV,IAAAA,WAAW,GAAGW,IAAd,CAAmBC,GAAG,IAAIF,QAAQ,CAACF,aAAa,CAACI,GAAG,CAACC,IAAL,CAAd,CAAlC;AACH,GAFD;AAIH,CALM;AAOP,OAAO,MAAMC,mBAAmB,GAAID,IAAD,IAAU;AACzC,SAAQH,QAAD,IAAc;AACjBX,IAAAA,cAAc,CAACc,IAAD,CAAd,CAAqBF,IAArB,CAA0BC,GAAG,IAAIG,KAAK,CAACH,GAAG,CAACC,IAAJ,CAASG,OAAV,CAAL,IAA2BhB,WAAW,EAAvE;AACH,GAFD;AAGH,CAJM;AAKP,eAAeI,eAAf","sourcesContent":["import { addNewLocation, getLocation } from \"../api/locationAPI\";\n\nconst GET_LOCATION = 'GET_LOCATION'\n\nlet initsialStore = {\n    location:null\n};\n\nconst locationReducer = (state = initsialStore, action) => {\n    switch (action.type) {\n        case GET_LOCATION:\n            return{\n                ...state,\n                location: [...action.location]\n            }\n       \n        default: return state;\n    }\n}\n\nconst getLocationAC = (location) => {return{type:GET_LOCATION,location}}\n\nexport const getLocationThunk = () => {\n    return (dispatch) =>{\n        getLocation().then(res => dispatch(getLocationAC(res.data)))\n    }\n\n}\n\nexport const addNewLocationThunk = (data) => {\n    return (dispatch) => {\n        addNewLocation(data).then(res => alert(res.data.message) && getLocation())\n    }\n}\nexport default locationReducer;\n"]},"metadata":{},"sourceType":"module"}