{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Documents/Webapps/react-crm/client/src/components/Admin/Admin.jsx\";\nimport React from 'react';\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer, MDBCol, MDBRow } from \"mdbreact\";\nimport Preloder from '../common/Preloder/preloder';\nimport style from './style.module.css';\nimport format from 'date-format';\n\nconst Admin = props => {\n  if (!props.bikes || !props.bookings) {\n    return /*#__PURE__*/React.createElement(Preloder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const availiblesBikes = props.bikes.filter(b => b.isAvailible === true).length;\n  const busyBikes = props.bikes.filter(b => b.isAvailible === false).length;\n  const confirmedBooking = props.bookings.filter(b => b.confirmed === true).length;\n  const waitingBooking = props.bookings.filter(b => b.confirmed === false).length;\n  const state1 = {\n    dataDoughnut: {\n      labels: [\"In rent\", \"Availibles\"],\n      datasets: [{\n        data: [busyBikes, availiblesBikes],\n        backgroundColor: [\"#2e7d32\", \"#66bb6a\"],\n        hoverBackgroundColor: [\"#388e3c\", \"#81c784\"]\n      }]\n    }\n  };\n  const state2 = {\n    dataDoughnut: {\n      labels: [\"Confirmed bookings\", \"Waiting for confirm\"],\n      datasets: [{\n        data: [confirmedBooking, waitingBooking],\n        backgroundColor: [\"#ffc107\", \"#ff6f00\"],\n        hoverBackgroundColor: [\"#ffca28\", \"#ff8f00\"]\n      }]\n    }\n  };\n  const confBooking = props.bookings.filter(b => b.confirmed === true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Bikes chart\"), /*#__PURE__*/React.createElement(Doughnut, {\n    data: state1.dataDoughnut,\n    options: {\n      responsive: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Total :\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, props.bikes.length))), /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Booking chart\"), /*#__PURE__*/React.createElement(Doughnut, {\n    data: state2.dataDoughnut,\n    options: {\n      responsive: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Total :\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, props.bookings.length)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Delivery and Return\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, confBooking.map(b => Math.floor((new Date(b.startDate).getTime() - new Date().getTime()) / 1000 / 60 / 60 / 24) <= 3 && Math.floor((new Date(b.startDate).getTime() - new Date().getTime()) / 1000 / 60 / 60 / 24) >= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.deliveryBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, b.model + ' #' + b.plateNumber), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Customer: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 42\n    }\n  }, b.name), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 64\n    }\n  }, b.phone)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Date: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 38\n    }\n  }, format('dd.MM.yyyy', new Date(b.startDate))), \" Time: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 102\n    }\n  }, format('hh:mm', new Date(b.startDate)))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Delivery to: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 45\n    }\n  }, b.address))) : null)), /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, confBooking.map(b => Math.floor((new Date(b.endDate).getTime() - new Date().getTime()) / 1000 / 60 / 60 / 24) <= 3 && Math.floor((new Date(b.endDate).getTime() - new Date().getTime()) / 1000 / 60 / 60 / 24) >= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.returnBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, b.model + ' #' + b.plateNumber), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Customer: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 42\n    }\n  }, b.name), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 64\n    }\n  }, b.phone)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Date: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }\n  }, format('dd.MM.yyyy', new Date(b.endDate))), \" Time: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 100\n    }\n  }, format('hh:mm', new Date(b.endDate)))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \" Return from: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 46\n    }\n  }, b.address))) : null)))));\n};\n\nexport default Admin;","map":{"version":3,"sources":["/Users/macbookair/Documents/Webapps/react-crm/client/src/components/Admin/Admin.jsx"],"names":["React","Doughnut","MDBContainer","MDBCol","MDBRow","Preloder","style","format","Admin","props","bikes","bookings","availiblesBikes","filter","b","isAvailible","length","busyBikes","confirmedBooking","confirmed","waitingBooking","state1","dataDoughnut","labels","datasets","data","backgroundColor","hoverBackgroundColor","state2","confBooking","responsive","textAlign","map","Math","floor","Date","startDate","getTime","deliveryBox","model","plateNumber","name","phone","address","endDate","returnBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer, MDBCol, MDBRow } from \"mdbreact\";\nimport Preloder from '../common/Preloder/preloder';\nimport style from './style.module.css'\nimport format from 'date-format'\n\nconst Admin = (props) => {\n    if (!props.bikes || !props.bookings){\n        return <Preloder />\n    }\n   const availiblesBikes =  props.bikes.filter(b => b.isAvailible === true).length\n   const busyBikes = props.bikes.filter(b => b.isAvailible === false).length\n   const confirmedBooking = props.bookings.filter( b => b.confirmed === true).length\n   const waitingBooking = props.bookings.filter( b => b.confirmed === false).length\n    const state1 = {\n        dataDoughnut: {\n          labels: [\"In rent\", \"Availibles\",],\n          datasets: [\n            {\n              data: [busyBikes, availiblesBikes],\n              backgroundColor: [\"#2e7d32\", \"#66bb6a\"],\n                hoverBackgroundColor: [\n                \"#388e3c\",\n                \"#81c784\"\n              ]\n            }\n          ]\n        }\n    }\n    const state2 = {\n        dataDoughnut: {\n          labels: [\"Confirmed bookings\", \"Waiting for confirm\",],\n          datasets: [\n            {\n              data: [confirmedBooking, waitingBooking],\n              backgroundColor: [\"#ffc107\", \"#ff6f00\"],\n                hoverBackgroundColor: [\n                \"#ffca28\",\n                \"#ff8f00\"\n              ]\n            }\n          ]\n        }\n    }\n    const confBooking = props.bookings.filter(b => b.confirmed === true)\n    return (\n        <div>\n       \n            <MDBContainer>\n                <h3>Statistics</h3> \n                <hr/>\n                <MDBRow>\n                    <MDBCol>\n                        <h3 className=\"mt-5\">Bikes chart</h3>\n                        <Doughnut data={state1.dataDoughnut} options={{ responsive: true }} />\n                        <p style={{textAlign:'center'}}>Total : \n                        <span>{props.bikes.length}</span></p>\n                    </MDBCol>\n                    <MDBCol>\n                    <h3 className=\"mt-5\">Booking chart</h3>\n                        <Doughnut data={state2.dataDoughnut} options={{ responsive: true }} />\n                        <p style={{textAlign:'center'}}>Total : \n                        <span>{props.bookings.length}</span></p>\n                    </MDBCol>\n                </MDBRow>\n                <h3>Delivery and Return</h3>\n                <hr/>\n                <MDBRow>\n                    <MDBCol>\n                    {confBooking.map(b=> \n                    (Math.floor((new Date(b.startDate).getTime() - new Date().getTime())/ 1000 / 60 / 60 / 24) <= 3\n                     && Math.floor((new Date(b.startDate).getTime() - new Date().getTime())/ 1000 / 60 / 60 / 24) >= 0 ) \n                    ?  <div className={style.deliveryBox}>\n                            <h3>{b.model + ' #' + b.plateNumber}</h3>\n                            <p>Customer: <span>{b.name}</span> <span>{b.phone}</span></p>\n                            <p>Date: <span>{format('dd.MM.yyyy',new Date(b.startDate))}</span> Time: <span>{format('hh:mm',new Date(b.startDate))}</span></p>\n                            <p>Delivery to: <span>{b.address}</span></p>\n                        </div>\n                    : null\n                    \n                    )}\n                    </MDBCol>\n                    <MDBCol>\n                    {confBooking.map(b=> \n                    ( Math.floor((new Date(b.endDate).getTime() - new Date().getTime())/ 1000 / 60 / 60 / 24)  <= 3 \n                    && Math.floor((new Date(b.endDate).getTime() - new Date().getTime())/ 1000 / 60 / 60 / 24)  >= 0  )\n                    ?  <div className={style.returnBox}>\n                            <h3>{b.model + ' #' + b.plateNumber}</h3>\n                            <p>Customer: <span>{b.name}</span> <span>{b.phone}</span></p>\n                            <p>Date: <span>{format('dd.MM.yyyy',new Date(b.endDate))}</span> Time: <span>{format('hh:mm',new Date(b.endDate))}</span></p>\n                            <p> Return from: <span>{b.address}</span></p>\n                        </div>\n                    : null\n                    )}\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </div>\n    );\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}